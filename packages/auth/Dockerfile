# syntax = docker/dockerfile:experimental
# ===== Builder =====
# ===================
FROM node:10.15.0-alpine AS builder

RUN apk --no-cache add \
  g++ make python git \
  && yarn global add node-gyp \
  && rm -rf /var/cache/apk/*

WORKDIR /builder/

# Cache backend's package
ADD packages/backend/package.json    packages/backend/
ADD package.json                      .
ADD yarn.lock                         .

# Cache models' src
ADD packages/models packages/models
ADD packages/types packages/types

RUN yarn --pure-lockfile

# Cache backend's src
ADD packages/backend packages/backend

# Build
RUN yarn workspace @app/backend build --node-args='--stack_size=6144 --max-old-space-size=6144' --mode production

# ===== Builder02 =====
# =====================
FROM node:10.15.0-alpine AS builder02

RUN apk --no-cache add \
  g++ make python git \
  && yarn global add node-gyp \
  && rm -rf /var/cache/apk/*

WORKDIR /builder02/
COPY --from=builder /builder/packages/backend/dist/ .
RUN sed -ie '/@app\/models/d' ./package.json
RUN sed -ie '/@app\/types/d' ./package.json
ADD yarn.lock                         .
RUN yarn install --pure-lockfile --production=true


# ===== backend =====
# ==================
FROM node:10.15.0-alpine AS backend

WORKDIR /app/
COPY --from=builder   /builder/packages/backend/dist/   .
COPY --from=builder02 /builder02/node_modules ./node_modules
